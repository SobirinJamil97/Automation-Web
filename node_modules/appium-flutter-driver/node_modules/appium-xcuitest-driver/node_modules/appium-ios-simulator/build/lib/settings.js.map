{"version":3,"file":"settings.js","names":["plistPaths","sim","identifier","paths","simDirectory","getDir","push","path","resolve","getAppDir","semver","lt","coerce","xcodeVersion","versionString","updateSettings","plist","updates","B","reduce","reducer","updated","update","pathToPlist","currentSettings","read","newSettings","Object","assign","_","isEqual","updatePlistFile","readSettings","settings","parsePlistFile","updateLocationSettings","bundleId","authorized","newCachePrefs","LastFenceActivityTimestamp","CleanShutdown","newClientPrefs","BundleId","Authorized","Whitelisted","file","log","debug","weirdLocKey","has","BundlePath","Executable","Registered","baseSetting","defaults","setReduceMotion","reduceMotion","ReduceMotionEnabled","updateSafariGlobalSettings","settingSet","safariSettingSet","toPairs","key","value","isEmpty","updateSafariUserSettings","newUserSettings","safariAllowJavaScript","WebKitJavaScriptEnabled","safariAllowPopups","WebKitJavaScriptCanOpenWindowsAutomatically","safariForceFraudWarning","WarnAboutFraudulentWebsites","userSettingSet","restrictedBool","updateLocale","language","locale","calendarFormat","globalPrefs","data","supportedLangs","AppleLanguages","indexOf","concat","without","calSplit","curLocaleAndCal","AppleLocale","split","curLoc","newLocaleAndCal","size","stub"],"sources":["../../lib/settings.js"],"sourcesContent":["import _ from 'lodash';\nimport { plist } from '@appium/support';\nimport path from 'path';\nimport log from './logger';\nimport semver from 'semver';\nimport B from 'bluebird';\n\n\n// returns path to plist based on id for plist.\n// these ids are appium terms\nasync function plistPaths (sim, identifier) {\n  let paths = [];\n  let simDirectory = sim.getDir();\n\n  switch (identifier) {\n    case 'webInspector':\n      paths.push(path.resolve(simDirectory, 'Library', 'Preferences', 'com.apple.webInspector.plist'));\n      break;\n    case 'mobileSafari':\n      paths.push(path.resolve(await sim.getAppDir('com.apple.mobilesafari'), 'Library', 'Preferences', 'com.apple.mobilesafari.plist'));\n      break;\n    case 'globalMobileSafari':\n      paths.push(path.resolve(simDirectory, 'Library', 'Preferences', 'com.apple.mobilesafari.plist'));\n      break;\n    case 'webUI':\n      paths.push(path.resolve(simDirectory, 'Library', 'Preferences', 'com.apple.WebUI.plist'));\n      break;\n    case 'webFoundation':\n      paths.push(path.resolve(simDirectory, 'Library', 'Preferences', 'com.apple.WebFoundation.plist'));\n      break;\n    case 'preferences':\n      paths.push(path.resolve(simDirectory, 'Library', 'Preferences', 'com.apple.Preferences.plist'));\n      break;\n    case 'locationServices':\n      paths.push(path.resolve(simDirectory, 'Library', 'Preferences', 'com.apple.locationd.plist'));\n      break;\n    case 'locationClients':\n      paths.push(path.resolve(simDirectory, 'Library', 'Caches', 'locationd', 'clients.plist'));\n      break;\n    case 'locationCache':\n      paths.push(path.resolve(simDirectory, 'Library', 'Caches', 'locationd', 'cache.plist'));\n      paths.push(path.resolve(simDirectory, 'Library', 'Preferences', 'com.apple.locationd.plist'));\n      break;\n    case 'userSettings':\n      if (semver.lt(semver.coerce(sim.xcodeVersion.versionString), semver.coerce('7.3'))) {\n        paths.push(path.resolve(simDirectory, 'Library', 'ConfigurationProfiles', 'UserSettings.plist'));\n        paths.push(path.resolve(simDirectory, 'Library', 'ConfigurationProfiles', 'EffectiveUserSettings.plist'));\n        paths.push(path.resolve(simDirectory, 'Library', 'ConfigurationProfiles', 'PublicInfo', 'PublicEffectiveUserSettings.plist'));\n      } else {\n        paths.push(path.resolve(simDirectory, 'Library', 'UserConfigurationProfiles', 'UserSettings.plist'));\n        paths.push(path.resolve(simDirectory, 'Library', 'UserConfigurationProfiles', 'EffectiveUserSettings.plist'));\n        paths.push(path.resolve(simDirectory, 'Library', 'UserConfigurationProfiles', 'PublicInfo', 'PublicEffectiveUserSettings.plist'));\n      }\n      break;\n    case 'effectiveUserSettings':\n      paths.push(path.resolve(simDirectory, 'Library', 'ConfigurationProfiles', 'EffectiveUserSettings.plist'));\n      paths.push(path.resolve(simDirectory, 'Library', 'ConfigurationProfiles', 'PublicInfo', 'PublicEffectiveUserSettings.plist'));\n      break;\n    case 'accessibilitySettings':\n      paths.push(path.resolve(simDirectory, 'Library', 'Preferences', 'com.apple.Accessibility.plist'));\n      break;\n    case 'uiStyleSettings':\n      paths.push(path.resolve(simDirectory, 'Library', 'Preferences', 'com.apple.uikitservices.userInterfaceStyleMode.plist'));\n      break;\n  }\n\n  return paths;\n}\n\nasync function updateSettings (sim, plist, updates) {\n  return await B.reduce(await plistPaths(sim, plist), async function reducer (updated, path) {\n    return await update(path, updates) || updated;\n  }, false);\n}\n\n// update a plist file, located at pathToPlist\n// pass in an object, all settings specified in the object will be\n// updated on the plist, all others left as-is\nasync function update (pathToPlist, updates) {\n  const currentSettings = await read(pathToPlist);\n  const newSettings = Object.assign({}, currentSettings, updates);\n\n  if (_.isEqual(currentSettings, newSettings)) {\n    // no setting changes, so do nothing\n    return false;\n  }\n\n  await plist.updatePlistFile(pathToPlist, newSettings, true, false);\n  return true;\n}\n\nasync function readSettings (sim, plist) {\n  let settings = {};\n  for (let path of await plistPaths(sim, plist)) {\n    settings[path] = await read(path);\n  }\n  return settings;\n}\n\nasync function read (pathToPlist) {\n  return await plist.parsePlistFile(pathToPlist, false);\n}\n\nasync function updateLocationSettings (sim, bundleId, authorized) {\n  // update location cache\n  const newCachePrefs = {\n    LastFenceActivityTimestamp: 412122103.232983,\n    CleanShutdown: true\n  };\n  let updated = await updateSettings(sim, 'locationCache', {[bundleId]: newCachePrefs});\n\n  // update location clients\n  const newClientPrefs = {\n    BundleId: bundleId,\n    Authorized: !!authorized,\n    Whitelisted: false,\n  };\n  for (const file of await plistPaths(sim, 'locationClients')) {\n    log.debug(`Updating location client file: ${file}`);\n\n    let updates = {};\n\n    // see if the bundle is already there\n    const plist = await read(file);\n\n    // random data that always seems to be in the clients.plist\n    const weirdLocKey = 'com.apple.locationd.bundle-/System/Library/' +\n                        'PrivateFrameworks/AOSNotification.framework';\n    if (!_.has(plist, weirdLocKey)) {\n      updates[weirdLocKey] = {\n        BundlePath: '/System/Library/PrivateFrameworks/AOSNotification.framework',\n        Whitelisted: false,\n        Executable: '',\n        Registered: ''\n      };\n    }\n\n    // create the update, and make sure it has sensible values\n    const baseSetting = _.has(plist, bundleId) ? plist[bundleId] : {};\n    updates[bundleId] = _.defaults(newClientPrefs, baseSetting);\n    updates[bundleId].Executable = updates[bundleId].Executable || '';\n    updates[bundleId].Registered = updates[bundleId].Registered || '';\n\n    updated = await update(file, updates) || updated;\n  }\n\n  return updated;\n}\n\nasync function setReduceMotion (sim, reduceMotion = true) {\n  log.debug(`Updating reduce motion. Setting to ${reduceMotion}.`);\n  const paths = await plistPaths(sim, 'accessibilitySettings');\n  for (const file of paths) {\n    await update(file, {\n      ReduceMotionEnabled: reduceMotion ? 1 : 0\n    });\n  }\n}\n\nasync function updateSafariGlobalSettings (sim, settingSet) {\n  log.debug('Updating Safari global settings');\n\n  let updated = false;\n  for (const [file, safariSettingSet] of _.toPairs(await readSettings(sim, 'globalMobileSafari'))) {\n    let newSettings = {};\n    for (const [key, value] of _.toPairs(settingSet)) {\n      if (safariSettingSet[key] !== value) {\n        newSettings[key] = value;\n      }\n    }\n    if (_.isEmpty(newSettings)) {\n      continue;\n    }\n\n    updated = await update(file, newSettings) || updated;\n  }\n  return updated;\n}\n\nasync function updateSafariUserSettings (sim, settingSet) {\n  log.debug('Updating Safari user settings');\n\n  // add extra stuff to UserSettings.plist and EffectiveUserSettings.plist\n  let newUserSettings = {};\n  if (_.has(settingSet, 'WebKitJavaScriptEnabled')) {\n    newUserSettings.safariAllowJavaScript = settingSet.WebKitJavaScriptEnabled;\n  }\n  if (_.has(settingSet, 'WebKitJavaScriptCanOpenWindowsAutomatically')) {\n    newUserSettings.safariAllowPopups = settingSet.WebKitJavaScriptCanOpenWindowsAutomatically;\n  }\n  if (_.has(settingSet, 'WarnAboutFraudulentWebsites')) {\n    newUserSettings.safariForceFraudWarning = !settingSet.WarnAboutFraudulentWebsites;\n  }\n\n  if (_.isEmpty(newUserSettings)) {\n    return false;\n  }\n\n  let updated = false;\n  for (const [file, userSettingSet] of _.toPairs(await readSettings(sim, 'userSettings'))) {\n    // the user settings plist has two buckets, one for\n    // boolean settings (`restrictedBool`) and one for\n    // other value settings (`restrictedValue`). In each, the value\n    // is in a `value` sub-field.\n    if (!_.has(userSettingSet, 'restrictedBool')) {\n      userSettingSet.restrictedBool = {};\n    }\n    for (let [key, value] of _.toPairs(newUserSettings)) {\n      userSettingSet.restrictedBool[key] = {value};\n    }\n\n    // actually do the update\n    updated = await update(file, userSettingSet) || updated;\n  }\n\n  return updated;\n}\n\nasync function updateLocale (sim, language, locale, calendarFormat) {\n  let globalPrefs = path.resolve(sim.getDir(), 'Library', 'Preferences',\n                                 '.GlobalPreferences.plist');\n\n  // get the current data\n  let data = await read(globalPrefs);\n  let updates = {};\n\n  // if we are setting the language, add it to the beginning of the list of languages\n  if (language) {\n    log.debug(`New language: ${language}`);\n    let supportedLangs = data.AppleLanguages || [];\n    // if the language is first, we don't need to do anything\n    if (supportedLangs.indexOf(language) !== 0) {\n      updates.AppleLanguages = [language].concat(_.without(supportedLangs, language));\n    }\n  }\n  // if we are setting the locale or calendar format, set them as appropriate\n  if (locale || calendarFormat) {\n    let calSplit = '@calendar=';\n    let curLocaleAndCal = data.AppleLocale || language || 'en';\n\n    let split = curLocaleAndCal.split(calSplit);\n    let curLoc = split[0];\n    if (calendarFormat || split[1]) {\n      calendarFormat = `${calSplit}${calendarFormat || split[1] || ''}`;\n    }\n    calendarFormat = calendarFormat || '';\n    let newLocaleAndCal = locale ? locale : curLoc;\n    if (calendarFormat) {\n      newLocaleAndCal = `${newLocaleAndCal}${calendarFormat}`;\n    }\n    // only need to update if it has changed\n    if (newLocaleAndCal !== curLocaleAndCal) {\n      log.debug(`New locale: ${newLocaleAndCal}`);\n      updates.AppleLocale = newLocaleAndCal;\n    }\n  }\n\n  if (_.size(updates) === 0) {\n    log.debug('No locale updates necessary.');\n    return false;\n  }\n\n  log.debug('Writing new locale plist data');\n  await update(globalPrefs, updates);\n  return true;\n}\n\nasync function stub () {\n  return await plistPaths;\n}\n\nexport {\n  update, updateSettings, updateLocationSettings, setReduceMotion,\n  updateSafariUserSettings, updateSafariGlobalSettings, updateLocale, read,\n  readSettings, stub,\n};\n"],"mappings":"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"}